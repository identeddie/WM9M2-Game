#define PI 3.1415926538

Texture2D tex_albedo : register(t0);
Texture2D tex_normal : register(t1);
Texture2D tex_world_pos : register(t2);

SamplerState samplerLinear : register(s0);

cbuffer lightingBuffer {
	float3 lightPos;
	float3 lightColor;
	float4x4 invView;
}

struct PS_INPUT {
	float4 Pos : SV_POSITION;
	float2 TexCoords : TEXCOORD;
};

float4 PS(PS_INPUT input) : SV_Target0 {
	float4 color = tex_albedo.Sample(samplerLinear, input.TexCoords);
	return color;
	if (color.a == 0) {
		discard;
	}

	float3 normal = tex_normal.Sample(samplerLinear, input.TexCoords).xyz;
	normal = normal * 2.0 - 1.0;
	float3 worldPos = tex_world_pos.Sample(samplerLinear, input.TexCoords).xyz;

	float3 diff = lightPos - worldPos;
	float3 omega = diff / length(diff);

	color = float4((color.rgb / PI) * lightColor * max(dot(normal, omega), 0), 1);
	return color;
}
